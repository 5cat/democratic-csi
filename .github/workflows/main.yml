name: CI

on:
  push:
    tags:
      - "v*"
    branches:
      - master
      - next

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

  csi-sanity-synology:
    strategy:
      matrix:
        config:
          - synlogy-iscsi/default.yaml
    runs-on:
      - self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: csi-sanity
        run: |
          export PATH="/usr/local/lib/nodejs/bin:${PATH}"
          export CI_BUILD_KEY=$(uuidgen)
          sudo -E ci/bin/launch-server.sh &
          # wait for server to launch
          sleep 10
          sudo -E ci/bin/launch-csi-sanity.sh
        env:
          TEMPLATE_CONFIG_FILE: "./ci/configs/${{ matrix.config }}"
          SYNOLOGY_HOST: ${{ secrets.SANITY_SYNOLOGY_HOST }}
          SYNOLOGY_PORT: ${{ secrets.SANITY_SYNOLOGY_PORT }}
          SYNOLOGY_USERNAME: ${{ secrets.SANITY_SYNOLOGY_USERNAME }}
          SYNOLOGY_PASSWORD: ${{ secrets.SANITY_SYNOLOGY_PASSWORD }}
          SYNOLOGY_VOLUME: ${{ secrets.SANITY_SYNOLOGY_VOLUME }}
          TARGET_PORTAL: ${{ secrets.SANITY_SYNOLOGY_TARGET_PORTAL }}

  build:
    needs:
      - csi-sanity-synology
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: docker build
        run: |
          export ARCH=$([ $(uname -m) = "x86_64" ] && echo "amd64" || echo "arm64")
          mkdir -p ~/.docker/cli-plugins/
          wget -qO ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v0.5.1/buildx-v0.5.1.linux-${ARCH}
          chmod a+x ~/.docker/cli-plugins/docker-buildx
          docker info
          docker buildx version
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker buildx create --name xbuilder --use
          docker buildx inspect --bootstrap
          .github/bin/docker-release.sh

        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
          GHCR_PASSWORD: ${{ secrets.GHCR_PASSWORD }}
          DOCKER_CLI_EXPERIMENTAL: enabled
          DOCKER_BUILD_PLATFORM: linux/amd64,linux/arm64,linux/arm/v7
